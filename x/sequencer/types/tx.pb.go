// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sequencer/sequencer/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_warp_contracts_syncer_src_utils_bundlr "github.com/warp-contracts/syncer/src/utils/bundlr"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type InteractionType int32

const (
	InteractionType_L1 InteractionType = 0
	InteractionType_L2 InteractionType = 1
)

var InteractionType_name = map[int32]string{
	0: "L1",
	1: "L2",
}

var InteractionType_value = map[string]int32{
	"L1": 0,
	"L2": 1,
}

func (x InteractionType) String() string {
	return proto.EnumName(InteractionType_name, int32(x))
}

func (InteractionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0ca98cc63da9ee56, []int{0}
}

type MsgDataItem struct {
	DataItem        github_com_warp_contracts_syncer_src_utils_bundlr.BundleItem `protobuf:"bytes,1,opt,name=data_item,json=dataItem,proto3,customtype=github.com/warp-contracts/syncer/src/utils/bundlr.BundleItem" json:"data_item"`
	InteractionType InteractionType                                              `protobuf:"varint,2,opt,name=interaction_type,json=interactionType,proto3,enum=sequencer.sequencer.InteractionType" json:"interaction_type,omitempty"`
}

func (m *MsgDataItem) Reset()         { *m = MsgDataItem{} }
func (m *MsgDataItem) String() string { return proto.CompactTextString(m) }
func (*MsgDataItem) ProtoMessage()    {}
func (*MsgDataItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca98cc63da9ee56, []int{0}
}
func (m *MsgDataItem) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDataItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDataItem.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDataItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDataItem.Merge(m, src)
}
func (m *MsgDataItem) XXX_Size() int {
	return m.Size()
}
func (m *MsgDataItem) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDataItem.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDataItem proto.InternalMessageInfo

func (m *MsgDataItem) GetInteractionType() InteractionType {
	if m != nil {
		return m.InteractionType
	}
	return InteractionType_L1
}

type MsgDataItemResponse struct {
}

func (m *MsgDataItemResponse) Reset()         { *m = MsgDataItemResponse{} }
func (m *MsgDataItemResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDataItemResponse) ProtoMessage()    {}
func (*MsgDataItemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca98cc63da9ee56, []int{1}
}
func (m *MsgDataItemResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDataItemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDataItemResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDataItemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDataItemResponse.Merge(m, src)
}
func (m *MsgDataItemResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDataItemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDataItemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDataItemResponse proto.InternalMessageInfo

type MsgArweaveBlockInfo struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Height    uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Timestamp uint64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Hash      []byte `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (m *MsgArweaveBlockInfo) Reset()         { *m = MsgArweaveBlockInfo{} }
func (m *MsgArweaveBlockInfo) String() string { return proto.CompactTextString(m) }
func (*MsgArweaveBlockInfo) ProtoMessage()    {}
func (*MsgArweaveBlockInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca98cc63da9ee56, []int{2}
}
func (m *MsgArweaveBlockInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgArweaveBlockInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgArweaveBlockInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgArweaveBlockInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgArweaveBlockInfo.Merge(m, src)
}
func (m *MsgArweaveBlockInfo) XXX_Size() int {
	return m.Size()
}
func (m *MsgArweaveBlockInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgArweaveBlockInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MsgArweaveBlockInfo proto.InternalMessageInfo

func (m *MsgArweaveBlockInfo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgArweaveBlockInfo) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *MsgArweaveBlockInfo) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MsgArweaveBlockInfo) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type MsgArweaveBlockInfoResponse struct {
}

func (m *MsgArweaveBlockInfoResponse) Reset()         { *m = MsgArweaveBlockInfoResponse{} }
func (m *MsgArweaveBlockInfoResponse) String() string { return proto.CompactTextString(m) }
func (*MsgArweaveBlockInfoResponse) ProtoMessage()    {}
func (*MsgArweaveBlockInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0ca98cc63da9ee56, []int{3}
}
func (m *MsgArweaveBlockInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgArweaveBlockInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgArweaveBlockInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgArweaveBlockInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgArweaveBlockInfoResponse.Merge(m, src)
}
func (m *MsgArweaveBlockInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgArweaveBlockInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgArweaveBlockInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgArweaveBlockInfoResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("sequencer.sequencer.InteractionType", InteractionType_name, InteractionType_value)
	proto.RegisterType((*MsgDataItem)(nil), "sequencer.sequencer.MsgDataItem")
	proto.RegisterType((*MsgDataItemResponse)(nil), "sequencer.sequencer.MsgDataItemResponse")
	proto.RegisterType((*MsgArweaveBlockInfo)(nil), "sequencer.sequencer.MsgArweaveBlockInfo")
	proto.RegisterType((*MsgArweaveBlockInfoResponse)(nil), "sequencer.sequencer.MsgArweaveBlockInfoResponse")
}

func init() { proto.RegisterFile("sequencer/sequencer/tx.proto", fileDescriptor_0ca98cc63da9ee56) }

var fileDescriptor_0ca98cc63da9ee56 = []byte{
	// 450 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xf5, 0xb6, 0x51, 0x68, 0x16, 0x44, 0xa3, 0x2d, 0x20, 0x13, 0x8a, 0x1b, 0x22, 0x0e, 0x11,
	0x02, 0x1b, 0x82, 0xb8, 0x71, 0x21, 0xea, 0x25, 0x12, 0x55, 0x25, 0x0b, 0x71, 0xe0, 0x62, 0x6d,
	0x9c, 0xc1, 0x5e, 0x11, 0xef, 0x9a, 0xdd, 0x09, 0xad, 0xff, 0x05, 0x7f, 0x89, 0x5b, 0x2f, 0x48,
	0x3d, 0x22, 0x0e, 0x15, 0x4a, 0xfe, 0x08, 0xf2, 0xba, 0x4e, 0x42, 0x09, 0x1f, 0xa7, 0x9d, 0x8f,
	0xb7, 0x7e, 0xf3, 0x9e, 0x67, 0xe9, 0xbe, 0x81, 0x8f, 0x33, 0x90, 0x31, 0xe8, 0x60, 0x15, 0xe1,
	0xa9, 0x9f, 0x6b, 0x85, 0x8a, 0xed, 0x2d, 0x6b, 0xfe, 0x32, 0xea, 0xdc, 0x4a, 0x54, 0xa2, 0x6c,
	0x3f, 0x28, 0xa3, 0x0a, 0xda, 0xb9, 0x1b, 0x2b, 0x93, 0x29, 0x13, 0x55, 0x8d, 0x2a, 0xb9, 0x6c,
	0x3d, 0xde, 0xc4, 0x31, 0xe5, 0x06, 0x23, 0xae, 0x4f, 0x80, 0x7f, 0x82, 0x68, 0x3c, 0x55, 0xf1,
	0x87, 0x0a, 0xdd, 0xfb, 0x42, 0xe8, 0xf5, 0x23, 0x93, 0x1c, 0x72, 0xe4, 0x23, 0x84, 0x8c, 0x71,
	0xda, 0x9a, 0x70, 0xe4, 0x91, 0x40, 0xc8, 0x5c, 0xd2, 0x25, 0xfd, 0x1b, 0xc3, 0xc3, 0xb3, 0x8b,
	0x03, 0xe7, 0xfb, 0xc5, 0xc1, 0xcb, 0x44, 0x60, 0x3a, 0x1b, 0xfb, 0xb1, 0xca, 0x82, 0x13, 0xae,
	0xf3, 0x27, 0xb1, 0x92, 0xa8, 0x79, 0x8c, 0x26, 0x30, 0x45, 0xc5, 0xa7, 0xe3, 0x60, 0x86, 0x62,
	0x6a, 0x82, 0xf1, 0x4c, 0x4e, 0xa6, 0xda, 0x1f, 0x96, 0x07, 0x94, 0x1f, 0x0e, 0x77, 0x26, 0x35,
	0xc5, 0x31, 0x6d, 0x0b, 0x89, 0x50, 0xde, 0x14, 0x4a, 0x46, 0x58, 0xe4, 0xe0, 0x6e, 0x75, 0x49,
	0xff, 0xe6, 0xe0, 0xa1, 0xbf, 0xc1, 0x01, 0x7f, 0xb4, 0x02, 0xbf, 0x29, 0x72, 0x08, 0x77, 0xc5,
	0xaf, 0x85, 0xde, 0x6d, 0xba, 0xb7, 0x26, 0x21, 0x04, 0x93, 0x2b, 0x69, 0xa0, 0x57, 0xd8, 0xf2,
	0xab, 0x4a, 0xf4, 0xb0, 0xd4, 0x3c, 0x92, 0xef, 0x15, 0x73, 0xe9, 0xb5, 0x58, 0x03, 0x47, 0xa5,
	0xad, 0xbe, 0x56, 0x58, 0xa7, 0xec, 0x0e, 0x6d, 0xa6, 0x20, 0x92, 0x14, 0xed, 0x38, 0x8d, 0xf0,
	0x32, 0x63, 0xfb, 0xb4, 0x85, 0x22, 0x03, 0x83, 0x3c, 0xcb, 0xdd, 0x6d, 0xdb, 0x5a, 0x15, 0x18,
	0xa3, 0x8d, 0x94, 0x9b, 0xd4, 0x6d, 0x94, 0x66, 0x85, 0x36, 0xee, 0xdd, 0xa7, 0xf7, 0x36, 0x50,
	0xd7, 0x93, 0x3d, 0x7a, 0x40, 0x77, 0xaf, 0x88, 0x62, 0x4d, 0xba, 0xf5, 0xfa, 0x59, 0xdb, 0xb1,
	0xe7, 0xa0, 0x4d, 0x06, 0x5f, 0x09, 0xdd, 0x3e, 0x32, 0x09, 0x7b, 0x4b, 0x77, 0x96, 0xff, 0xa6,
	0xbb, 0xd1, 0x9e, 0x35, 0xe9, 0x9d, 0xfe, 0xbf, 0x10, 0xf5, 0x08, 0x4c, 0xd2, 0xf6, 0x6f, 0xce,
	0xfc, 0xf1, 0xf6, 0x55, 0x64, 0xe7, 0xe9, 0xff, 0x22, 0x6b, 0xbe, 0xe1, 0xf1, 0xd9, 0xdc, 0x23,
	0xe7, 0x73, 0x8f, 0xfc, 0x98, 0x7b, 0xe4, 0xf3, 0xc2, 0x73, 0xce, 0x17, 0x9e, 0xf3, 0x6d, 0xe1,
	0x39, 0xef, 0x5e, 0xfc, 0x65, 0xad, 0x96, 0xfb, 0x7b, 0xba, 0xfe, 0x5e, 0x8a, 0x1c, 0xcc, 0xb8,
	0x69, 0xf7, 0xf7, 0xf9, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xcc, 0x26, 0x0c, 0x72, 0x53, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	DataItem(ctx context.Context, in *MsgDataItem, opts ...grpc.CallOption) (*MsgDataItemResponse, error)
	ArweaveBlockInfo(ctx context.Context, in *MsgArweaveBlockInfo, opts ...grpc.CallOption) (*MsgArweaveBlockInfoResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) DataItem(ctx context.Context, in *MsgDataItem, opts ...grpc.CallOption) (*MsgDataItemResponse, error) {
	out := new(MsgDataItemResponse)
	err := c.cc.Invoke(ctx, "/sequencer.sequencer.Msg/DataItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ArweaveBlockInfo(ctx context.Context, in *MsgArweaveBlockInfo, opts ...grpc.CallOption) (*MsgArweaveBlockInfoResponse, error) {
	out := new(MsgArweaveBlockInfoResponse)
	err := c.cc.Invoke(ctx, "/sequencer.sequencer.Msg/ArweaveBlockInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	DataItem(context.Context, *MsgDataItem) (*MsgDataItemResponse, error)
	ArweaveBlockInfo(context.Context, *MsgArweaveBlockInfo) (*MsgArweaveBlockInfoResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) DataItem(ctx context.Context, req *MsgDataItem) (*MsgDataItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DataItem not implemented")
}
func (*UnimplementedMsgServer) ArweaveBlockInfo(ctx context.Context, req *MsgArweaveBlockInfo) (*MsgArweaveBlockInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArweaveBlockInfo not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_DataItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDataItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DataItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sequencer.sequencer.Msg/DataItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DataItem(ctx, req.(*MsgDataItem))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ArweaveBlockInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgArweaveBlockInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ArweaveBlockInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sequencer.sequencer.Msg/ArweaveBlockInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ArweaveBlockInfo(ctx, req.(*MsgArweaveBlockInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sequencer.sequencer.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DataItem",
			Handler:    _Msg_DataItem_Handler,
		},
		{
			MethodName: "ArweaveBlockInfo",
			Handler:    _Msg_ArweaveBlockInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sequencer/sequencer/tx.proto",
}

func (m *MsgDataItem) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDataItem) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDataItem) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.InteractionType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.InteractionType))
		i--
		dAtA[i] = 0x10
	}
	{
		size := m.DataItem.Size()
		i -= size
		if _, err := m.DataItem.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgDataItemResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDataItemResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDataItemResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgArweaveBlockInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgArweaveBlockInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgArweaveBlockInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Hash) > 0 {
		i -= len(m.Hash)
		copy(dAtA[i:], m.Hash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Hash)))
		i--
		dAtA[i] = 0x22
	}
	if m.Timestamp != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x18
	}
	if m.Height != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgArweaveBlockInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgArweaveBlockInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgArweaveBlockInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgDataItem) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.DataItem.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.InteractionType != 0 {
		n += 1 + sovTx(uint64(m.InteractionType))
	}
	return n
}

func (m *MsgDataItemResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgArweaveBlockInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Height != 0 {
		n += 1 + sovTx(uint64(m.Height))
	}
	if m.Timestamp != 0 {
		n += 1 + sovTx(uint64(m.Timestamp))
	}
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgArweaveBlockInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgDataItem) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDataItem: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDataItem: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DataItem", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DataItem.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InteractionType", wireType)
			}
			m.InteractionType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.InteractionType |= InteractionType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDataItemResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDataItemResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDataItemResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgArweaveBlockInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgArweaveBlockInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgArweaveBlockInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash = append(m.Hash[:0], dAtA[iNdEx:postIndex]...)
			if m.Hash == nil {
				m.Hash = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgArweaveBlockInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgArweaveBlockInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgArweaveBlockInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
