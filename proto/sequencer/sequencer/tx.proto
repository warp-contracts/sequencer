syntax = "proto3";

package sequencer.sequencer;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "sequencer/sequencer/arweave_block_info.proto";

option go_package = "github.com/warp-contracts/sequencer/x/sequencer/types";

// Msg defines the Msg service.
service Msg {
  rpc DataItem           (MsgDataItem          ) returns (MsgDataItemResponse          );
  rpc ArweaveBlockInfo   (MsgArweaveBlockInfo  ) returns (MsgArweaveBlockInfoResponse  );
  rpc ArweaveTransaction (MsgArweaveTransaction) returns (MsgArweaveTransactionResponse);
}

message MsgDataItem {
  bytes data_item = 1 [(gogoproto.customtype) = "github.com/warp-contracts/syncer/src/utils/bundlr.BundleItem", (gogoproto.nullable) = false];
}

message MsgDataItemResponse {}

message MsgArweaveBlockInfo {
  string creator   = 1;
  uint64 height    = 2;
  uint64 timestamp = 3;
  bytes  hash      = 4;
}

message MsgArweaveBlockInfoResponse {}

message MsgArweaveTransaction {
  bytes transaction = 1 [(gogoproto.customtype) = "github.com/warp-contracts/syncer/src/utils/arweave.Transaction", (gogoproto.nullable) = false];
}

message MsgArweaveTransactionResponse {}

