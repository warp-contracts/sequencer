syntax = "proto3";

package sequencer.sequencer;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "sequencer/sequencer/arweave_block_info.proto";
import "sequencer/sequencer/arweave_transaction.proto";

option go_package = "github.com/warp-contracts/sequencer/x/sequencer/types";

// Msg defines the Msg service.
service Msg {
  rpc DataItem           (MsgDataItem    ) returns (MsgDataItemResponse    );
  rpc ArweaveBlock       (MsgArweaveBlock) returns (MsgArweaveBlockResponse);
}

// message with L2 interaction in the form of a data item
message MsgDataItem {
  bytes data_item = 1 [(gogoproto.customtype) = "github.com/warp-contracts/syncer/src/utils/bundlr.BundleItem", (gogoproto.nullable) = false];
}

message MsgDataItemResponse {}

// message with an Arweave block
message MsgArweaveBlock {
  ArweaveBlockInfo block_info = 1;
  repeated ArweaveTransaction transactions = 2;
}

message MsgArweaveBlockResponse {}
